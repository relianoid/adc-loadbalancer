#!/usr/bin/bash
###############################################################################
#
#    RELIANOID Software License
#    This file is part of the RELIANOID Load Balancer software package.
#
#    Copyright (C) 2014-today RELIANOID
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
###############################################################################

set -e
trap 'echo Failed at ${LINENO}: $BASH_COMMAND' ERR

GLOBALCF="/usr/local/relianoid/config/global.conf"
GLOBALCFT="/usr/local/relianoid/share/global.conf.template"

[ ! "$1" == "configure" ] && echo "Installation aborted $1 $2" && exit 1
[   "$1" == "configure" ] && echo "Completing the RELIANOID installation..."

# upgrading global.conf
/usr/local/relianoid/bin/checkglobalconf

# load LB variables
source /usr/local/relianoid/bin/load_global_conf
load_global_conf

## System services

# Enable root access through SSH
SSHDCONFIG="/etc/ssh/sshd_config"
if [[ -e $SSHDCONFIG && `grep -c "^PermitRootLogin.*yes" $SSHDCONFIG` == '0' ]]; then
	sed -i -e 's/^PermitRootLogin.*/PermitRootLogin yes/' $SSHDCONFIG
	if [[ "$(/etc/init.d/ssh status | grep -c 'sshd is not running')" == '0' ]]; then
		/etc/init.d/ssh reload 2> /dev/null
	fi
fi

# Start ssh server after relianoid service
sed -i 's/^\# Required-Start:.*/# Required-Start:\t\$remote_fs \$syslog relianoid/g' /etc/init.d/ssh
sed -i 's/^\# Required-Stop:.*/# Required-Stop:\t\$remote_fs \$syslog relianoid/g'   /etc/init.d/ssh

# SNMP service
if [[ -f /etc/snmp/snmpd.conf && `grep -c '#zenlb' /etc/snmp/snmpd.conf` == '0' ]]; then
	/etc/init.d/snmpd stop
	update-rc.d snmpd disable
	cp /usr/local/relianoid/share/snmpd.conf.template /etc/snmp/snmpd.conf
fi

# Disable SNMP debugging messages in log
if [[ `grep -c 'LSd' /etc/default/snmpd` == '1' ]]; then
	sed -i -e 's/LSd/LS6d/' /etc/default/snmpd
fi

# Grub disk configuration
GRUB_CONF='/tmp/grub-pc.debconf'
GRUB_DISK=`fdisk -l | grep 'Disk /dev/' | head -1 | awk '{ printf $2}' | tr -d ':'`
DEBCONF_DEVICES=`debconf-show grub-pc | grep grub-pc/install_devices: | cut -d: -f2 | cut -d\  -f2-`
if [ -e "$GRUB_DISK" -a "$GRUB_DISK" != "$DEBCONF_DEVICES" ]; then
	echo "grub-pc grub-pc/install_devices multiselect $GRUB_DISK" > $GRUB_CONF
	debconf-set-selections $GRUB_CONF
	rm $GRUB_CONF
fi

## Create configuration files

# Move zlb-stop & zlb-start
if [ ! -f $zlb_start_script ]; then
	cp $zlb_start_tpl $zlb_start_script
fi
if [ ! -f $zlb_stop_script ]; then
	cp $zlb_stop_tpl $zlb_stop_script
fi

# create Web server
if [ ! -f "$http_server_cert" ]; then
	cp -rf $http_server_cert_tpl $http_server_cert
fi
if [ ! -f "$http_server_key" ]; then
	cp -rf $http_server_key_tpl $http_server_key
fi

# Install check_uplink
BIN_PATH="/usr/local/relianoid/bin"
LIBEXEC_PATH="/usr/lib/nagios/plugins"
if [ ! -L ${LIBEXEC_PATH}/check_uplink ]; then
	ln -s ${BIN_PATH}/check_uplink ${LIBEXEC_PATH}/check_uplink
fi

# Apply all migrating scripts to RELIANOID
MIG_DIR="/usr/local/relianoid/migrating/"
for SCRIPT in `ls $MIG_DIR`; do ${MIG_DIR}$SCRIPT; done

# Restarting RELIANOID service
echo "RELIANOID will be unavailable while the service is restarting."
/etc/init.d/relianoid stop
/etc/init.d/relianoid start

# Add RELIANOID Load Balancer service to boot process
update-rc.d relianoid defaults
update-rc.d zevenet remove    # Deprecate Zevenet

cat > /etc/motd << 'EOF'

██████  ███████ ██      ██  █████  ███    ██  ██████  ██ ██████  
██   ██ ██      ██      ██ ██   ██ ████   ██ ██    ██ ██ ██   ██ 
██████  █████   ██      ██ ███████ ██ ██  ██ ██    ██ ██ ██   ██ 
██   ██ ██      ██      ██ ██   ██ ██  ██ ██ ██    ██ ██ ██   ██ 
██   ██ ███████ ███████ ██ ██   ██ ██   ████  ██████  ██ ██████  
                                                                 
RELIANOID ADC Community Edition
www.relianoid.com

 Need assistance?
 https://www.relianoid.com/contact-us/

EOF

if [ "`grep Debian /etc/issue`" != "" -o "`grep -i Zevenet /etc/issue`" != "" ]; then
 sed -i "s/.*Debian.*/RELIANOID Community Edition \\\n \\\l/g" /etc/issue
fi

# Set the cron service
cp /usr/local/relianoid/share/relianoid.cron /etc/cron.d/relianoid
rm -f /etc/cron.d/zevenet    # Deprecate Zevenet
/etc/init.d/cron reload

# Change prompt color
sed -i "s/1;30m/0;37m/g" /etc/bash.bashrc 2> /dev/null

# Cluster
sed -i '/changed-by-relianoid/d' /root/.bashrc &>/dev/null || true
sed -i '/^export PROMPT_COMMAND=.*zevenet-ce-cluster.status/d' /root/.bashrc &>/dev/null || true # Deprecate Zevenet
FOUND_CE_CLUSTER=`grep -c relianoid-ce-cluster.status /root/.bashrc 2>/dev/null` || true
if [ $FOUND_CE_CLUSTER -eq 0 ]; then
	echo "if [ -f /etc/relianoid-ce-cluster.status ]; then #changed-by-relianoid" >> /root/.bashrc
	echo "export PROMPT_COMMAND=\"echo -n \[\\\$(cat /etc/relianoid-ce-cluster.status 2>/dev/null)\]\ \" #changed-by-relianoid" >> /root/.bashrc
	echo "fi #changed-by-relianoid" >> /root/.bashrc
fi
# Cluster

# Configure apt repository
perl -E "require Relianoid::System::Packages; exit &setSystemPackagesRepo();"

## Run checkupdates to update message
$checkupdates_bin > /dev/null

echo "RELIANOID Load Balancer installation completed."
