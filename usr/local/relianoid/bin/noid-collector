#!/usr/bin/perl
###############################################################################
#
#    RELIANOID Software License
#    This file is part of the RELIANOID Load Balancer software package.
#
#    Copyright (C) 2014-today RELIANOID
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
###############################################################################

# This command collects different metrics and store them in RRD files, graphs
# of these metrics are available via RELIANOID Load Balancer GUI and API.
#
# The collection of metrics is scheduled with cron.

use strict;
use warnings;
use feature qw(signatures);

use Relianoid::Config;
use Relianoid::Debug;
use Relianoid::Lock;

my $lockfile = getLockFile("rrd");

if (-e $lockfile) {
    print "RRD Locked by $lockfile, maybe other noid-collector in execution\n";
    exit;
}
else {
    open my $lock, '>', $lockfile;
    print $lock "lock rrd";
    close $lock;
}

my $bin_dir = &getGlobalConfiguration('bin_dir');

opendir(my $dh, $bin_dir);
my @commands = grep { /^noid-collector-.+-rrd\.(?:pl|sh)$/ } readdir($dh);
closedir($dh);

for my $command_filename (@commands) {
    print "Executing $command_filename...\n";

    my $cmd = "${bin_dir}/${command_filename}";

    if (&debug() == 0) {
        my $errno = system("${cmd} >/dev/null 2>&1");
        &log_error("Error running '${cmd}' from noid-collector", "SYSTEM") if $errno;
    }
    else {
        &logAndRun($cmd);
    }
}

if (-e $lockfile) {
    unlink($lockfile);
}
