#!/usr/bin/perl
###############################################################################
#
#    RELIANOID Software License
#    This file is part of the RELIANOID Load Balancer software package.
#
#    Copyright (C) 2014-today RELIANOID
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
###############################################################################

use strict;
use warnings;
use feature qw(signatures);

use Relianoid::Log;
use Relianoid::Config;

my $name   = $ARGV[0];
my $action = $ARGV[1] // "";

if (not $action) {
    print STDERR "No action requested\n";
    exit 0;
}

my $backup_dir = &getGlobalConfiguration('backupdir');
my $tar        = &getGlobalConfiguration('tar');
my $exclude_52_60 =
  "--exclude=hostname --exclude=activation-cert.pem --exclude=/etc/cron.d/relianoid --exclude=global.conf --exclude=ssh_brute_force.txt --exclude=cluster.conf --exclude=relianoid_version";

if ($action eq "-c") {
    my $backup_for   = &getGlobalConfiguration('backupfor');
    my $version      = &getGlobalConfiguration('version');
    my $version_file = '/relianoid_version';
    my $backup_file  = "${backup_dir}/backup-${name}.tar.gz";

    open my $file, '>', $version_file;
    print $file $version;
    close $file;

    log_info("Creating backup ${backup_file}");

    my $cmd    = "${tar} -czf ${backup_file} ${backup_for}";
    my $output = `${cmd} 2>&1`;
    log_info($output);

    unlink $version_file;
}

if ($action eq "-d") {
    my $output = `${tar} -xzf ${backup_dir}/backup-${name}.tar.gz -C / 2>&1`;
    print STDERR $output if $output;
    log_info($output);
}

if ($action eq "-D52to60") {
    print "Importing from RELIANOID 5.2 to RELIANOID 6.0, using ${backup_dir}/backup-${name}.tar.gz\n";
    print "A snapshot before to continue is recommended for Virtual Load Balancers...\n";

    if (!-e "${backup_dir}/backup-${name}.tar.gz") {
        print "The given file doesn't exist...\n";
        exit;
    }

    print "Will be kept: current hostname, global.conf and activation certificate file.\n";
    print "Cluster config file will not be imported\n";
    print "Press ENTER to start...\n";
    read(STDIN, my $tmp, 1);

    my @output = `${tar} ${exclude_52_60} -xvzf ${backup_dir}/backup-${name}.tar.gz -C /`;
    print "@output\n";
    print "Configuration files have been moved to local system.\n";

    # Migrating config files
    print "\nMigrating Configuration files ...";
    &migrateConfigFiles();
    print "Done\n\n";

    # check ntp and gw settings
    my @old_config = `tar -axf ${backup_dir}/backup-${name}.tar.gz usr/local/relianoid/config/global.conf -O`;

    for my $config_line (@old_config) {
        chomp $config_line;

        if ($config_line =~ /^\$ntp = \"(.*)\";$/) {
            my $ntp_old = $1;
            my $ntp_new = &getGlobalConfiguration('ntp');

            if ($ntp_old ne $ntp_new) {
                print "Warning! old global.conf ntp value : ${ntp_old} , new value : ${ntp_new}\n";
            }
        }

        if ($config_line =~ /^\$defaultgw = \"(.*)\";$/) {
            my $gw_old = $1;
            my $gw_new = &getGlobalConfiguration('defaultgw');

            if ($gw_old ne $gw_new) {
                print "Warning! old global.conf defaultgw value : ${gw_old} , new value : ${gw_new}\n";
            }
        }
    }

    print "\n";
    print "A restart of the load balancer is pending in order to apply the changes...\n";
}

